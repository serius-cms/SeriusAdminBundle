{# This code manages the many-to-[one|many] association field popup #}

{% autoescape false %}
{% set associationadmin = sonata_admin.field_description.associationadmin %}

<script type="text/javascript">

	{#
	  handle link click in a list :
		- if the parent has an objectId defined then the related input get updated
		- if the parent has NO object then an ajax request is made to refresh the popup
	#}
	var field_dialog_form_list_link_{{ id }} = function(event) {
		initialize_popup_{{ id }}();

		event.preventDefault();
		event.stopPropagation();

		Admin.log('[{{ id }}|field_dialog_form_list_link] handle link click in a list');

		var element = $(this).parents('#field_dialog_{{ id }} .sonata-ba-list-field');

		// the user does not click on a row column
		if (element.length == 0) {
			// make a recursive call (ie: reset the filter)
			$.ajax({
				type: 'GET',
				url: $(this).attr('href'),
				dataType: 'html',
				success: function(html) {
					Admin.log('[{{ id }}|field_dialog_form_list_link] callback success, attach valid js event');

					field_dialog_{{ id }}.html(html);
					field_dialog_form_list_handle_action_{{ id }}();
				}
			});

			return;
		}


		var objectId = element.attr('objectId');

		$('#{{ id }}').val(objectId);
		$('#{{ id }}').trigger('change', objectId);

		field_dialog_{{ id }}.modal('hide');
	};

	// this function handle action on the modal list when inside a selected list
	var field_dialog_form_list_handle_action_{{ id }}  =  function() {

		Admin.log('[{{ id }}|field_dialog_form_list_handle_action] attaching valid js event');

		Admin.add_filters(field_dialog_{{ id }});

		// capture the submit event to make an ajax call, ie : POST data to the
		// related create admin
		$('a', field_dialog_{{ id }}).on('click', field_dialog_form_list_link_{{ id }});
		$('form', field_dialog_{{ id }}).on('submit', function(event) {
			event.preventDefault();

			var form = $(this);

			Admin.log('[{{ id }}|field_dialog_form_list_handle_action] catching submit event, sending ajax request');

			$(form).ajaxSubmit({
				type: form.attr('method'),
				url: form.attr('action'),
				dataType: 'html',
				data: {_xml_http_request: true},
				success: function(html) {

					Admin.log('[{{ id }}|field_dialog_form_list_handle_action] form submit success, restoring event');

					field_dialog_{{ id }}.html(html);
					field_dialog_form_list_handle_action_{{ id }}();
				}
			});
		});
	};

	// handle the list link
	var field_dialog_form_list_{{ id }} = function(event) {

		initialize_popup_{{ id }}();

		event.preventDefault();
		event.stopPropagation();

		Admin.log('[{{ id }}|field_dialog_form_list] open the list modal');

		var a = $(this);

		field_dialog_{{ id }}.find('.modal-body').html('');

		// retrieve the form element from the related admin generator
		$.ajax({
			url: a.attr('href'),
			dataType: 'html',
			success: function(html) {

				Admin.log('[{{ id }}|field_dialog_form_list] retrieving the list content');

				// populate the popup container
				field_dialog_{{ id }}.find('.modal-body').html(html);

				Admin.add_filters(field_dialog_{{ id }});

				field_dialog_form_list_handle_action_{{ id }}();

				// open the dialog in modal mode
				field_dialog_{{ id }}.modal().on('hide.bs.modal', function() {
					Admin.log('[{{ id }}|field_dialog_form_list] close callback, removing js event');

					// make sure we have a clean state
					$('a', field_dialog_{{ id }}).off('click');
					$('form', field_dialog_{{ id }}).off('submit');
				});
			}
		});
	};

	// handle the add link
	var field_dialog_form_add_{{ id }} = function(event) {
		initialize_popup_{{ id }}();

		event.preventDefault();
		event.stopPropagation();

		var a = $(this);

		field_dialog_{{ id }}.find('.modal-body').html('');

		Admin.log('[{{ id }}|field_dialog_form_add] add link action');

		// retrieve the form element from the related admin generator
		$.ajax({
			url: a.attr('href'),
			dataType: 'html',
			success: function(html) {

				Admin.log('[{{ id }}|field_dialog_form_add] ajax success', field_dialog_{{ id }});

				// populate the popup container
				field_dialog_{{ id }}.find('.modal-body').html(html);

				// capture the submit event to make an ajax call, ie : POST data to the
				// related create admin
				$('a', field_dialog_{{ id }}).on('click', field_dialog_form_action_{{ id }});
				$('form', field_dialog_{{ id }}).on('submit', field_dialog_form_action_{{ id }});

				// open the dialog in modal mode
				field_dialog_{{ id }}.modal().on('hide.bs.modal', function() {
					Admin.log('[{{ id }}|field_dialog_form_add] dialog closed - removing  events');
					// make sure we have a clean state
					$('a', field_dialog_{{ id }}).off('click');
					$('form', field_dialog_{{ id }}).off('submit');
				});
			}
		});
	};

	// handle the post data
	var field_dialog_form_action_{{ id }} = function(event) {

		var element = $(this);

		// return if the link is an anchor inside the same page
		if (this.nodeName == 'A' && (element.attr('href').length == 0 || element.attr('href')[0] == '#')) {
			return;
		}

		event.preventDefault();
		event.stopPropagation();

		Admin.log('[{{ id }}|field_dialog_form_action] action catch', this);

		initialize_popup_{{ id }}();

		if (this.nodeName == 'FORM') {
			var url  = element.attr('action');
			var type = element.attr('method');
		} else if (this.nodeName == 'A') {
			var url  = element.attr('href');
			var type = 'GET';
		} else {
			alert('unexpected element : @' + this.nodeName + '@');
			return;
		}

		if (element.hasClass('sonata-ba-action')) {
			Admin.log('[{{ id }}|field_dialog_form_action] reserved action stop catch all events');
			return;
		}

		var data = {
			_xml_http_request: true
		}

		var form = $(this);

		Admin.log('[{{ id }}|field_dialog_form_action] execute ajax call');

		// the ajax post
		$(form).ajaxSubmit({
			url: url,
			type: type,
			data: data,
			success: function(data) {
				Admin.log('[{{ id }}|field_dialog_form_action] ajax success');

				// if the crud action return ok, then the element has been added
				// so the widget container must be refresh with the last option available
				if (typeof data != 'string' && data.result == 'ok') {
					field_dialog_{{ id }}.modal('hide');

					{% if sonata_admin.edit == 'list' %}
					{#
					   in this case we update the hidden input, and call the change event to
					   retrieve the post information
					#}
					$('#{{ id }}').val(data.objectId);
					$('#{{ id }}').trigger('change', data.objectId);

					{% else %}

					// reload the form element
					$('#field_widget_{{ id }}').closest('form').ajaxSubmit({
						url: '{{ url('sonata_admin_retrieve_form_element', {
                                'elementId': id,
                                'subclass':  sonata_admin.admin.getActiveSubclassCode(),
                                'objectId':  sonata_admin.admin.root.id(sonata_admin.admin.root.subject),
                                'uniqid':    sonata_admin.admin.root.uniqid,
                                'code':      sonata_admin.admin.root.code
                            }) }}',
						data: {_xml_http_request: true },
						dataType: 'html',
						type: 'POST',
						success: function(html) {
							$('#field_container_{{ id }}').replaceWith(html);
							var newElement = $('#{{ id }} [value="' + data.objectId + '"]');
							if (newElement.is("input")) {
								newElement.attr('checked', 'checked');
							} else {
								newElement.attr('selected', 'selected');
							}

							$('#field_container_{{ id }}').trigger('sonata-admin-append-form-element');
						}
					});

					{% endif %}

					return;
				}

				// otherwise, display form error
				field_dialog_{{ id }}.html(data);

				Admin.add_pretty_errors(field_dialog_{{ id }});

				// reattach the event
				$('form', field_dialog_{{ id }}).submit(field_dialog_form_action_{{ id }});
			}
		});

		return false;
	}

	var field_dialog_{{ id }} = false;

	function initialize_popup_{{ id }}() {
		// initialize component
		if (!field_dialog_{{ id }}) {
			field_dialog_{{ id }} = $("#field_dialog_{{ id }}");

			// move the dialog as a child of the root element, nested form breaks html ...
			$(document.body).append(field_dialog_{{ id }});

			Admin.log('[{{ id }}|field_dialog] move dialog container as a document child');
		}
	}

	{#
		This code is used to defined the "add" popup
	#}
	// this function initialize the popup
	// this can be only done this way has popup can be cascaded
	function start_field_dialog_form_add_{{ id }}(link) {

		// remove the html event
		link.onclick = null;

		initialize_popup_{{ id }}();

		// add the jQuery event to the a element
		$(link)
				.click(field_dialog_form_add_{{ id }})
				.trigger('click')
		;

		return false;
	}

	if (field_dialog_{{ id }}) {
		Admin.add_pretty_errors(field_dialog_{{ id }});
	}

	{% if sonata_admin.edit == 'list' %}
	{#
		This code is used to defined the "list" popup
	#}
	// this function initialize the popup
	// this can be only done this way has popup can be cascaded
	function start_field_dialog_form_list_{{ id }}(link) {

		link.onclick = null;

		initialize_popup_{{ id }}();

		// add the jQuery event to the a element
		$(link)
				.click(field_dialog_form_list_{{ id }})
				.trigger('click')
		;

		return false;
	}

	function remove_selected_element_{{ id }}(link) {

		link.onclick = null;

		$(link)
				.click(field_remove_element_{{ id}})
				.trigger('click')
		;

		return false;
	}

	function field_remove_element_{{ id }}(event) {
		event.preventDefault();

		if ($('#{{ id }} option').get(0)) {
			$('#{{ id }}').attr('selectedIndex', '-1').children("option:selected").attr("selected", false);
		}

		$('#{{ id }}').val('');
		$('#{{ id }}').trigger('change');

		return false;
	}
	{#
	  attach onchange event on the input
	#}

	// update the label
	$('#{{ id }}').on('change', function(event, objectId) {

		Admin.log('[{{ id }}] update the label');

		$('#field_widget_{{ id }}').html("<span><img src=\"{{ asset('bundles/sonataadmin/ajax-loader.gif') }}\" style=\"vertical-align: middle; margin-right: 10px\"/>{{ 'loading_information'|trans([], 'SonataAdminBundle') }}</span>");
		$.ajax({
			type: 'GET',
			url: '{{ url('sonata_admin_short_object_information', {
                    'objectId': 'OBJECT_ID',
                    'uniqid': associationadmin.uniqid,
                    'code': associationadmin.code,
                    'linkParameters': sonata_admin.field_description.options.link_parameters
                })}}'.replace('OBJECT_ID', objectId == undefined ? $(this).val() : objectId),
			dataType: 'html',
			success: function(html) {
				$('#field_widget_{{ id }}').html(html);
			}
		});
	});

	{% endif %}


</script>
<!-- / edit many association -->

{% endautoescape %}
